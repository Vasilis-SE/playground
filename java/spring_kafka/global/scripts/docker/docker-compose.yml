version: "3"
name: spring_kafka_example

services:

  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka_network

  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  kafka-ui:
    container_name: kafka-ui
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8080:8080'
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - kafka
    volumes:
      - ./kafka_config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - kafka_network

  user-db:
    image: mysql:9.2.0
    container_name: user-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: myuser
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: userdb
    ports:
      - "3307:3306"
    volumes:
      - ../data/user:/docker-entrypoint-initdb.d
    networks:
      - spring_kafka_mysql

  product-db:
    image: mysql:9.2.0
    container_name: product-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: myuser
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: productdb
    ports:
      - "3308:3306"
    volumes:
      - ../data/product:/docker-entrypoint-initdb.d
    networks:
      - spring_kafka_mysql

  dbeaver:
    image: dbeaver/cloudbeaver
    container_name: dbeaver
    ports:
      - "8000:8978"
    restart: always
    depends_on:
      - user-db
      - product-db
    volumes:
      - ../volumes/dbeaver:/opt/cloudbeaver/workspace
    networks:
      - spring_kafka_mysql

volumes:
  dbeaver:

networks:
  spring_kafka_mysql:
    driver: bridge
  kafka_network:
    driver: bridge